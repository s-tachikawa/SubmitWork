//---------------------------------------------------------
// 
//	iruna_stream_sound.h
//	サウンドのストリーム再生
//	作成日 7月10日
//	製作者 立川 翔野
// 
//---------------------------------------------------------

/*----多重インクルード防止-------------------------------------------------*/
#ifndef IRUNA_STREAM_SOUND_H
#define IRUNA_STREAM_SOUND_H

/*----マクロ-------------------------------------------------*/
#define BUFFER_NUM			2
#define PLAY_LOOP			0
#define PLAY_ONCE			1


/*----インクルード-------------------------------------------------*/
#include "../Include/iruna_utility.h"

/*----データ型宣言-------------------------------------------------*/
namespace iruna
{
namespace sound
{
// 前方宣言
class OggDecoder;
	
//=====================================================================
//
//	クラス名	:	StreamSound
//	処理		:	サウンドファイルのストリーム再生
//	製作者		:	立川 翔野
//	作成日		:	2011/07/10	- 作成
//
//=====================================================================
class StreamSound : public IXAudio2VoiceCallback
{
// プライベート	メンバ変数
private:

	IXAudio2SourceVoice*	voice;
	OggDecoder*				decoder;
	U_CHAR*					buffer[ BUFFER_NUM ];
	U_INT					bufferSize;
	int						loopPos;

// プライベート	メンバ関数
private:
	//--------------------------------------------------------------------
	// 
	//	処理	:	コピーコンストラクタ(コピー禁止)
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	StreamSound( const StreamSound& dummy );

	//--------------------------------------------------------------------
	// 
	//	処理	:	=演算子のオーバーロード(コピー禁止)
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	const StreamSound&		operator =( const StreamSound& dummy );

	//--------------------------------------------------------------------
	// 
	//	処理	:	(コールバック関数)
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	void WINAPI				OnVoiceProcessingPassStart( UINT32 requiredSize );

	//--------------------------------------------------------------------
	// 
	//	処理	:	(コールバック関数)
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	void WINAPI				OnVoiceProcessingPassEnd();

	//--------------------------------------------------------------------
	// 
	//	処理	:	(コールバック関数)
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	void WINAPI				OnStreamEnd();

	//--------------------------------------------------------------------
	// 
	//	処理	:	(コールバック関数)
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	void WINAPI				OnBufferStart( void* bufContext );

	//--------------------------------------------------------------------
	// 
	//	処理	:	(コールバック関数)
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	void WINAPI				OnBufferEnd( void* bufContext );

	//--------------------------------------------------------------------
	// 
	//	処理	:	(コールバック関数)
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	void WINAPI				OnLoopEnd( void* bufContext );

	//--------------------------------------------------------------------
	// 
	//	処理	:	(コールバック関数)
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	void WINAPI				OnVoiceError( void* bufContext, HRESULT error );

//	パブリック	メンバ関数
public:

	//--------------------------------------------------------------------
	// 
	//	処理	:	コンストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	StreamSound();

	//--------------------------------------------------------------------
	// 
	//	処理	:	デストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	~StreamSound();

	//--------------------------------------------------------------------
	// 
	//	処理	:	解放処理
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	void Release();

	//--------------------------------------------------------------------
	// 
	//	処理	:	サウンドファイルの読み込み
	//	第1引数	:	[in] path		- 読み込むサウンドファイルのパス
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	int LoadSound( std::string path );

	//--------------------------------------------------------------------
	// 
	//	処理	:	サウンドファイルの再生
	//	第1引数	:	[in] loopPos		- ループ再生させる位置
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	int PlaySound( int loopPos = PLAY_LOOP);

	//--------------------------------------------------------------------
	// 
	//	処理	:	サウンドファイルの停止
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	int StopSound();

	//--------------------------------------------------------------------
	// 
	//	処理	:	音量の設定
	//	第1引数	:	[in] setVolume	- 設定する音量
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	int SetVolume( float setVolume );

	//--------------------------------------------------------------------
	// 
	//	処理	:	再生スピードの設定
	//	第1引数	:	[in] setVolume	- 設定する再生スピード
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/10	- 作成
	// 
	//--------------------------------------------------------------------
	int SetSpeedRatio( float ratio );

};

}	//	sound	end
}	//	iruna	end
/*
	メモ
		まだOggファイルの読み込みしかできないので
		今後は複数の拡張子を読み込めるようにする。
*/
#endif	//	IRUNA_STREAM_SOUND_H	end