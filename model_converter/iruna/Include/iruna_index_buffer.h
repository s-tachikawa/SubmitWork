//---------------------------------------------------------
// 
//	iruna_index_buffer.h
//	インデックスバッファのラップ
//	作成日 6月23日
//	製作者 立川 翔野
// 
//---------------------------------------------------------

/*----多重インクルード防止-------------------------------------------------*/
#ifndef IRUNA_INDEX_BUFFER_H
#define IRUNA_INDEX_BUFFER_H

/*----インクルード-------------------------------------------------*/
#include "../Include/iruna_utility.h"

/*----データ型 宣言------------------------------------------------*/
namespace iruna
{
namespace graphics
{

//=====================================================================
//
//	クラス名	:	IndexBuffer
//	処理		:	インデックスバッファ
//	製作者		:	立川 翔野
//	作成日		:	2011/06/23	- 作成
//
//=====================================================================
class IndexBuffer
{
//	パブリック	型定義
public:
	//	インデックスのデータ型一覧
	enum Format{
		UNKNOWN	= -1,	//	未定義
		BIT16	=  0,	//	D3DFMT_INDEX16
		BIT32	=  1,	//	D3DFMT_INDEX32
	};

//	プライベート	メンバ変数
private:
	LPDIRECT3DINDEXBUFFER9		buffer;		//	インデックスバッファ
	U_LONG						indexCnt;	//	インデックスの数
	U_LONG						stride;		//	インデックス１個分のサイズ
	Format						format;		//	インデックスのデータ型

//	プライベート	メンバ関数
private:
	//--------------------------------------------------------------------
	// 
	//	処理	:	インデックスバッファを作成する
	//	戻り値	:	結果フラグ	ture：成功　false：失敗
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	bool	CreateIndexBuffer();

//	パブリック		メンバ関数
public:
	//--------------------------------------------------------------------
	// 
	//	処理	:	コンストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	IndexBuffer();

	//--------------------------------------------------------------------
	// 
	//	処理	:	コピーコンストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	IndexBuffer( const IndexBuffer& another );

	//--------------------------------------------------------------------
	// 
	//	処理	:	デストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	~IndexBuffer();

	//--------------------------------------------------------------------
	// 
	//	処理	:	バッファを作成し、フォーマット等をとっておく
	//	第1引数	:	[in] indexFormat	- 頂点のフォーマット
	//	第2引数	:	[in] indexCount		- インデックスの数
	//	戻り値	:	結果フラグ	ture：成功　false：失敗
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	bool	Create( Format indexFormat, U_LONG indexCount );

	//--------------------------------------------------------------------
	// 
	//	処理	:	バッファに書き込む
	//	第1引数	:	[in] data		- 書き込むデータ
	//	第2引数	:	[in] begin		- 何番目のバッファから書き込むか
	//	第3引数	:	[in] end		- 何番目のバッファまで書き込むか
	//	戻り値	:	結果フラグ	ture：成功　false：失敗
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	bool	SetBuffer( const void* data, U_LONG begin, U_LONG end );

	//--------------------------------------------------------------------
	// 
	//	処理	:	バッファをストリームに流す
	//	戻り値	:	結果フラグ	ture：成功　false：失敗
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	bool	IntoIndices();

	//--------------------------------------------------------------------
	// 
	//	処理	:	バッファを開放する
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	void	Release();
};

}	//	graphics	end
}	//	iruna		end


#endif	//	IRUNA_INDEX_BUFFER_H