//---------------------------------------------------------
// 
//	iruna_vertex_buffer.h
//	バーテクスバッファのラップ
//	作成日 6月23日
//	製作者 立川 翔野
// 
//---------------------------------------------------------

/*----多重インクルード防止-------------------------------------------------*/
#ifndef IRUNA_VERTEX_BUFFER_H
#define IRUNA_VERTEX_BUFFER_H

/*----インクルード-------------------------------------------------*/
#include "../Include/iruna_utility.h"

/*----データ型 宣言------------------------------------------------*/
namespace iruna
{
namespace graphics
{

//=====================================================================
//
//	クラス名	:	VertexBuffer
//	処理		:	頂点バッファ
//	製作者		:	立川 翔野
//	作成日		:	2011/06/23	- 作成
//
//=====================================================================
class VertexBuffer
{
//	パブリック	型定義
public:
	// 頂点のデータ型一覧
	enum Format{
		UNKNOWN	= -1,	// 未定義
		FLOAT1	=  0,	// D3DDECLTYPE_FLOAT1
		FLOAT2	=  1,	// D3DDECLTYPE_FLOAT2
		FLOAT3	=  2,	// D3DDECLTYPE_FLOAT3
		FLOAT4	=  3,	// D3DDECLTYPE_FLOAT4
		COLOR	=  4,	// D3DDECLTYPE_D3DCOLOR
		UBYTE4	=  5,	// D3DDECLTYPE_UBYTE4
		SHORT2	=  6,	// D3DDECLTYPE_SHORT2
		SHORT4	=  7,	// D3DDECLTYPE_SHORT4
	};

//	プライベート	メンバ変数
private:
	LPDIRECT3DVERTEXBUFFER9		buffer;		//	頂点バッファ
	U_LONG						vertexCnt;	//	頂点の数
	U_LONG						stride;		//	頂点１個分のサイズ
	Format						format;		//	頂点のデータ型

// ●プライベート	メンバ関数
private:
	//--------------------------------------------------------------------
	// 
	//	処理	:	頂点バッファを作成する
	//	戻り値	:	結果フラグ	ture：成功　false：失敗
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	bool	CreateVertexBuffer();

// ●パブリック		メンバ関数
public:
	//--------------------------------------------------------------------
	// 
	//	処理	:	コンストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	VertexBuffer();

	//--------------------------------------------------------------------
	// 
	//	処理	:	コピーコンストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	VertexBuffer( const VertexBuffer& another );

	//--------------------------------------------------------------------
	// 
	//	処理	:	デストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	~VertexBuffer();

	//--------------------------------------------------------------------
	// 
	//	処理	:	バッファを作成し、フォーマット等をとっておく
	//	第1引数	:	[in] vertexFormat	- 頂点のデータ型
	//	第1引数	:	[in] vertexCount	- 頂点の数
	//	戻り値	:	結果フラグ	ture：成功　false：失敗
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	bool	Create( Format vertexFormat, U_LONG vertexCount );

	//--------------------------------------------------------------------
	// 
	//	処理	:	バッファに書き込む
	//	第1引数	:	[in] data		- 書き込むデータ
	//	第1引数	:	[in] begin		- 何番目の頂点から書き込むか
	//	第1引数	:	[in] end		- 何番目の頂点まで書き込むか
	//	戻り値	:	結果フラグ	ture：成功　false：失敗
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	bool	SetBuffer( const void* data, U_LONG begin, U_LONG end );

	//--------------------------------------------------------------------
	// 
	//	処理	:	バッファをストリームに流す
	//	第1引数	:	[in] streamNum	- 流すストリームの番号
	//	戻り値	:	結果フラグ	ture：成功　false：失敗
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	bool	IntoStream( U_LONG streamNum );

	//--------------------------------------------------------------------
	// 
	//	処理	:	バッファを開放する
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	void	Release();
};

}	//	graphics	end
}	//	iruna		end

#endif	//	IRUNA_VERTEX_BUFFER_H	end