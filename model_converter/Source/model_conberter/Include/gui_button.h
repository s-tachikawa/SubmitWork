//---------------------------------------------------------
// 
//	gui_button.h
//	GUI上のボタンの管理
//	作成日 10月21日
//	製作者 立川 翔野
// 
//---------------------------------------------------------
/*----多重インクルード防止-------------------------------------------------*/
#ifndef GUI_BUTTON_H
#define GUI_BUTTON_H

/*----インクルード-------------------------------------------------*/
#include "../../iruna/Include/iruna.h"

/*----ネームスペース-------------------------------------------------*/
using namespace iruna;
using namespace	graphics;
using namespace	io;



struct GuiButton
{
// パブリック	メンバ列挙体
public:
	//	GUI上ボタンの種類一覧
	enum 
	{
		MODEL,		//	モデル読み込みボタン
		TEXTURE,	//	テクスチャー読み込みボタン
		SAVE,		//	セーブボタン
		BUTTON_MAX
	};
	//	ボタンの状態一覧
	enum 
	{
		NORMAL,		//	何もされていない状態
		HIT,		//	マウスカーソルが当たっている状態
		PUSH,		//	マウスカーソルで押された状態
	};

//	パブリック	メンバ構造体定義
public:

	//	ボタン更新関数ポインタ
	struct ButtonFunc
	{
		void (*UpDate)( GuiButton& button );
	};

//	パブリック	メンバ変数
public:

	Texture*		texture;	//	ボタン画像
	math::Rect		size;		//	Rectサイズ
	int				type;		//	ボタンのタイプ
	int				state;		//	ボタンの状態
	
//	パブリック	メンバ関数
public:

	//--------------------------------------------------------------------
	// 
	//	処理	:	ボタンの初期化
	// 
	//--------------------------------------------------------------------
	void			Init();

		//--------------------------------------------------------------------
	// 
	//	処理	:	ボタンの更新
	// 
	//--------------------------------------------------------------------
	ButtonFunc		func;

};




#endif	//	GUI_BUTTON_H	end