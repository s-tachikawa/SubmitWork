//---------------------------------------------------------
// 
//	ModelRender.h
//	モデルデータからモデルをレンダリングする
//	更新日 10月25日
//	製作者 立川 翔野
// 
//---------------------------------------------------------
/*----多重インクルード防止-------------------------------------------------*/
#ifndef MODEL_RENDER_H
#define MODEL_RENDER_H

/*----インクルード-------------------------------------------------*/
#include "../../iruna/Include/iruna.h"
#include "../Include/gui_slider.h"

/*----ネームスペース-------------------------------------------------*/
using namespace iruna;
using namespace	graphics;
using namespace core;
using namespace io;


//=====================================================================
//
//	クラス名	:	ModelRender
//	処理		:	読み込んだモデルデータをレンダリング
//
//=====================================================================
class ModelRender
{
private:

	ModelData*			modelData;		//	レンダリングモデルデータ

	VertexDeclaration*	dec;			//	頂点デクラレーション
	Texture*			texture;		//	テクスチャ
	Effect*				effect;			//	シェーダー
	DeviceController	render;			//	レンダリングデバイス
	
	float				animeFlame;		//	アニメーションフレーム

	Camera				camera;			//	カメラ

	float				cameraUp;		//	カメラ拡大率
	float				cameraAngle;	//	カメラの角度
	
	math::Vector3		modelPos;		//	モデルの座標
	math::Vector3		modelAngle;		//	モデルの角度
	float				modelScale;		//	モデルのスケール

	POINT				oldPos;			//	モデルの過去座標
	POINT				newPos;			//	モデルの現在座標
	math::WoldMatrix	wold;			//	ワールド行列クラス

public:

	//--------------------------------------------------------------------
	// 
	//	処理	:	コンストラクタ
	// 
	//--------------------------------------------------------------------
	ModelRender();

	//--------------------------------------------------------------------
	// 
	//	処理	:	デストラクタ
	// 
	//--------------------------------------------------------------------
	~ModelRender();

	//--------------------------------------------------------------------
	// 
	//	処理	:	レンダリングの更新
	// 
	//--------------------------------------------------------------------
	void UpDate();

	//--------------------------------------------------------------------
	// 
	//	処理	:	指定したモデルデータでレンダリングするモデル作成
	//	第1引数	:	[in]data	:	レンダリングするモデルのデータ
	// 
	//--------------------------------------------------------------------
	void CreateModel( ModelData* data );

	//--------------------------------------------------------------------
	// 
	//	処理	:	アニメーションフレームを設定する
	//	第1引数	:	[in]in_flame	:	レンダリングするフレーム
	// 
	//--------------------------------------------------------------------
	void SetAnimetionFlame( float in_flame );

	//--------------------------------------------------------------------
	// 
	//	処理	:	指定したモデルデータでレンダリングするモデル作成
	//	第1引数	:	[in]in_path : 指定したパスでテクスチャの読み込み
	// 
	//--------------------------------------------------------------------
	void CreateTexture( std::string in_path );


	//--------------------------------------------------------------------
	// 
	//	処理	:	モデルの描画処理
	// 
	//--------------------------------------------------------------------
	void Draw();

};

#endif	//	MODEL_RENDER_H	end