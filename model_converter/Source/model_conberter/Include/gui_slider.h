//---------------------------------------------------------
// 
//	bar_icon.h
//	指定した長さでバーのアイコンを作成し、管理する
//	更新日 1月8日
//	製作者 立川 翔野
// 
//---------------------------------------------------------
/*----多重インクルード---------------------------------*/
#ifndef ICON_BAR_H
#define ICON_BAR_H

/*----インクルード---------------------------------*/
#include "../../iruna/Include/iruna.h"

/*----ネームスペース-------------------------------------------------*/
using namespace iruna;
using namespace	graphics;

//=====================================================================
//
//	クラス名	:	BarIcon
//	処理		:	指定したサイズのバーを作成する
//
//=====================================================================
class BarIcon
{
//	プライベート	メンバ変数
private:
	float				valueMax;		//	バーの最大値
	math::Vector2		pos;			//	バー描画座標
	Texture*			barTex;			//	GUI上のバーに使用する画像
	Sprite*				barSpr;			//	バー描画用スプライト
	math::Vector2		curPos;			//	カーソル描画座標
	Sprite*				cur;			//	バー上を移動するカーソルスプライト
	bool				flag;			//	バーカーソル動作フラグ
	DeviceController	render;			//	レンダリングデバイス

//	プライベート	メンバ関数
private:

	bool HitCursor();

//	パブリック	メンバ関数
public:

	//--------------------------------------------------------------------
	// 
	//	処理	:	コンストラクタ
	// 
	//--------------------------------------------------------------------
	BarIcon();

	//--------------------------------------------------------------------
	// 
	//	処理	:	デストラクタ
	//
	//--------------------------------------------------------------------
	~BarIcon();

	//--------------------------------------------------------------------
	// 
	//	処理	:	スライダーの最大値を設定する
	//	第1引数 :	スライダーの最大値
	// 
	//--------------------------------------------------------------------
	void SetSliderMax( float max );

	//--------------------------------------------------------------------
	// 
	//	処理	:	スライダーの更新
	// 
	//--------------------------------------------------------------------
	void UpDate();

	//--------------------------------------------------------------------
	// 
	//	処理	:	スライダーの描画
	// 
	//--------------------------------------------------------------------
	void Draw();

	//--------------------------------------------------------------------
	// 
	//	処理	:	スライダー上のアイコンの座標を設定
	//	第1引数	:	指定するVector2型の座標
	// 
	//--------------------------------------------------------------------
	void SetPos( math::Vector2 setPos );

	//--------------------------------------------------------------------
	// 
	//	処理	:	現在のスライダーの値を取得
	//	戻り値	:	現在アイコンがいる位置の値
	// 
	//--------------------------------------------------------------------
	int GetValue();

	//--------------------------------------------------------------------
	// 
	//	処理	:	スライダーに値をセットする
	//	第1引数 :	していする値
	// 
	//--------------------------------------------------------------------
	void SetValue( float setValue );

};

#endif	//	ICON_BAR_H	end