//---------------------------------------------------------
// 
//	iruna_ogg.h
//	Oggの読み込みと管理
//	作成日 7月9日
//	製作者 立川 翔野
// 
//---------------------------------------------------------

/*----多重インクルード防止-------------------------------------------------*/
#ifndef IRUNA_OGG_H
#define IRUNA_OGG_H

/*----インクルード-------------------------------------------------*/
#include <vorbis/vorbisfile.h>
#include "../Include/iruna_utility.h"


/*----マクロ定義-------------------------------------------------*/
#define		SAMPLE_BITS			 16
#define		SAMPLE_BYTES		 SAMPLE_BITS / 8
#define		SOUND_PLAY_ONCE		 -1

/*----データ型宣言-------------------------------------------------*/
namespace iruna
{
namespace sound
{

//=====================================================================
//
//	クラス名	:	OggDecoder
//	処理		:	Ogg拡張子のサウンドファイルの読み込みと管理
//	製作者		:	立川 翔野
//	作成日		:	2011/07/9	- 作成
//
//=====================================================================
class OggDecoder
{
//	プライベート	メンバ変数
private:

	OggVorbis_File			fpOgg;	//	Oggファイル読み込み用ポインタ
	bool					open;	//	ファイル読み込みフラグ

// プライベート	メンバ関数
private:

	//--------------------------------------------------------------------
	// 
	//	処理	:	Oggファイルからフォーマットの取得
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/9	- 作成
	// 
	//--------------------------------------------------------------------
	void GetOutFormat( WAVEFORMATEX& format );

//	パブリック	メンバ関数
public:
	//--------------------------------------------------------------------
	// 
	//	処理	:	コンストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/9	- 作成
	// 
	//--------------------------------------------------------------------
	OggDecoder();

	//--------------------------------------------------------------------
	// 
	//	処理	:	デストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/9	- 作成
	// 
	//--------------------------------------------------------------------
	~OggDecoder();

	//--------------------------------------------------------------------
	// 
	//	処理	:	Oggファイルの読み込み
	//	第1引数	:	[in] path		- 読み込むOggファイルのパス
	//	第2引数	:	[out] format	- Oggファイルのフォーマット
	//	戻り値	:	結果フラグ	-1	: 初期化失敗 
	//							-2	: ファイルポインタの作成失敗 
	//							-3	: Oggファイルポインタの作成失敗
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/9	- 作成
	// 
	//--------------------------------------------------------------------
	int Open( std::string path, WAVEFORMATEX& format );

	//--------------------------------------------------------------------
	// 
	//	処理	:	Oggファイルの解放
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/9	- 作成
	// 
	//--------------------------------------------------------------------
	void Close();

	//--------------------------------------------------------------------
	// 
	//	処理	:	バッファから指定のサイズを読み出す
	//	第1引数	:	[in] buf	- 読み込むバッファ
	//	第2引数	:	[out] size	- 読み込んだバッファから取り出すサイズ
	//	戻り値	:	読み込んだサイズ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/9	- 作成
	// 
	//--------------------------------------------------------------------
	int	Decode( U_CHAR* buf, U_INT size );

	//--------------------------------------------------------------------
	// 
	//	処理	:	オフセット分バッファを移動させる
	//	第1引数	:	[in] offset	- バッファをどのくらい移動させるか
	//	製作者	:	立川 翔野
	//	作成日	:	2011/07/9	- 作成
	// 
	//--------------------------------------------------------------------
	void Seek( int offset );

	//--------------------------------------------------------------------
	// 
	//	処理	:	ストリームが終わったかどうか判定する
	//	製作者	:	立川 翔野
	//	戻り値	:	結果フラグ	ture：成功　false：失敗
	//	作成日	:	2011/07/9	- 作成
	// 
	//--------------------------------------------------------------------
	bool EndStream();

	//--------------------------------------------------------------------
	// 
	//	処理	:	バッファの長さを取得
	//	製作者	:	立川 翔野
	//	戻り値	:	バッファの長さ
	//	作成日	:	2011/05/17	- 作成
	// 
	//--------------------------------------------------------------------
	U_INT GetLength();


};

}	//	sound	end
}	//	iruna	end



#endif	//	IRUNA_OGG_H