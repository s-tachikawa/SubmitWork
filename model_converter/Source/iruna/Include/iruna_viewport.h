//---------------------------------------------------------
// 
//	iruna_viewport.h
//	ビューポート関連
//	作成日 6月24日
//	製作者 立川 翔野
// 
//---------------------------------------------------------

/*----多重インクルード防止-------------------------------------------------*/
#ifndef IRUNA_VIEWPORT_H
#define IRUNA_VIEWPORT_H

/*----インクルード-------------------------------------------------*/
#include "../Include/iruna_utility.h"
#include "../Include/iruna_math.h"

/*----データ型 宣言------------------------------------------------*/
namespace iruna
{
namespace graphics
{

//=====================================================================
//
//	クラス名	:	Viewport
//	処理		:	ビューポート、描画領域を設定する
//	製作者		:	立川 翔野
//	作成日		:	2011/06/24	- 作成
//
//=====================================================================
class Viewport
{
//	プライベート	メンバ変数
private:
	D3DVIEWPORT9	viewport;

//	パブリック		メンバ関数
public:
	//--------------------------------------------------------------------
	// 
	//	処理	:	コンストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/24	- 作成
	// 
	//--------------------------------------------------------------------
	Viewport();

	//--------------------------------------------------------------------
	// 
	//	処理	:	コピーコンストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/24	- 作成
	// 
	//--------------------------------------------------------------------
	Viewport( const Viewport& another );

	//--------------------------------------------------------------------
	// 
	//	処理	:	デストラクタ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/24	- 作成
	// 
	//--------------------------------------------------------------------
	~Viewport();

	//--------------------------------------------------------------------
	// 
	//	処理	:	ビューポートの大きさを指定する
	//	第1引数	:	[in] x		- 左上のx
	//	第2引数	:	[in] y		- 左上のy
	//	第3引数	:	[in] width	- 横幅
	//	第4引数	:	[in] height	- 高さ
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/24	- 作成
	// 
	//--------------------------------------------------------------------
	void	SetSize( U_INT x, U_INT y, U_INT width, U_INT height );

	//--------------------------------------------------------------------
	// 
	//	処理	:	ビューポートの大きさを指定する(矩形版)
	//	第1引数	:	[in] rect	- 設定するビューポートの矩形
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/24	- 作成
	// 
	//--------------------------------------------------------------------
	void	SetSize( math::Rect rect );

	//--------------------------------------------------------------------
	// 
	//	処理	:	ビューポートをデバイスにセット
	//	戻り値	:	結果フラグ	ture：成功　false：失敗
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/24	- 作成
	// 
	//--------------------------------------------------------------------
	bool	SetViewport();

	//--------------------------------------------------------------------
	// 
	//	処理	:	代入演算子オーバーロード、D3DVIEWPORT9をつっこめるように
	//	第1引数	:	[in] setViewport	- つっこみたいビューポート
	//	戻り値	:	自身の参照
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/24	- 作成
	// 
	//--------------------------------------------------------------------
	Viewport&	operator =( D3DVIEWPORT9 setViewport );
};

}	//	graphics	end
}	//	iruna		end

/*----グローバル関数 宣言----------------------------------------------------*/
namespace iruna
{
namespace graphics
{

//--------------------------------------------------------------------
// 
//	処理	:	デバイスから現在セットされているビューポートを取得
//	第1引数	:	[out] viewport	- 取得したビューポートを格納する
//	戻り値	:	結果フラグ	ture：成功　false：失敗
//	製作者	:	立川 翔野
//	作成日	:	2011/06/24	- 作成
// 
//--------------------------------------------------------------------
bool	GetViewport( Viewport& viewport );

}	//	graphics	end
}	//	iruna		end

#endif	//	IRUNA_VIEWPORT_H	end