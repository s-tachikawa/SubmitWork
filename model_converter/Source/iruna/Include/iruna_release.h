//---------------------------------------------------------
// 
//	iruna_release.h
//	解放処理関数
//	作成日 6月22日
//	製作者 立川 翔野
// 
//---------------------------------------------------------

/*----多重インクルード防止-------------------------------------------------*/
#ifndef IRUNA_RELEASE_H
#define IRUNA_RELEASE_H

/*----関数 定義----------------------------------------------------*/
namespace iruna
{

//--------------------------------------------------------------------
// 
//	処理		:	COMのReleaseを呼び出し、安全にリリースする
//	第一引数	:	[in] instance	- インスタンス
//	製作者		:	立川 翔野
//	製作日		:	2011/06/22	- 作成
// 
//--------------------------------------------------------------------
template< class T >
inline void SafeRelease( T& instance )
{
	if( instance )
		instance->Release();

	instance	= 0;

	return;
}

//--------------------------------------------------------------------
// 
//	処理		:	インスタンスを安全に解放する
//	第一引数	:	[in] instance	- インスタンス
//	製作者		:	立川 翔野
//	製作日		:	2011/06/22	- 作成
// 
//--------------------------------------------------------------------
template< class T >
inline void SafeDelete( T& instance )
{
	delete instance;
	instance	= 0;

	return;
}

//--------------------------------------------------------------------
// 
// 処理		:	インスタンスを安全に解放する(配列版)
// 第一引数	:	[in] instance	- インスタンス
// 製作者	:	立川 翔野
// 製作日	:	2011/06/22	- 作成
// 
//--------------------------------------------------------------------
template< class T >
inline void SafeArrayDelete( T& instance )
{
	delete[] instance;
	instance	= 0;

	return;
}

}	//	iruna end
#endif	//	IRUNA_RELEASE_H	end