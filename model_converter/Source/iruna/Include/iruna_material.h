//---------------------------------------------------------
// 
//	iruna_material.h
//	質感などの情報を扱う
//	作成日 6月23日
//	製作者 立川 翔野
// 
//---------------------------------------------------------

/*----多重インクルード防止-------------------------------------------------*/
#ifndef IRUNA_MATERIAL_H
#define IRUNA_MATERIAL_H

/*----インクルード-------------------------------------------------*/
#include "../Include/iruna_utility.h"
#include "../Include/iruna_color4.h"

/*----データ型 宣言------------------------------------------------*/
namespace iruna
{
namespace graphics
{

//=====================================================================
//
// 構造体名	:	Material
//	処理	:	質感等のパラメータを扱う構造体
//	製作者	:	立川 翔野
//	作成日	:	2011/05/30	- 作成
//
//=====================================================================
struct Material
{
//	パブリック	メンバ変数
public:
	Color4F		diffuse;	// 拡散光
	Color4F		ambient;	// 環境光
	Color4F		specular;	// 鏡面光
	Color4F		emissive;	// 放射光
	float		power;		// 鏡面光のハイライト
	
// ●パブリック		メンバ関数
public:
	//--------------------------------------------------------------------
	// 
	//	処理	:	コンストラクタ(全て0で初期化するタイプ)
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	Material();

	//--------------------------------------------------------------------
	// 
	//	処理	:	コンストラクタ(1つずつ指定して初期化するタイプ)
	//	第1引数	:	[in] setDiffuse		- 拡散光にセットする値
	//	第2引数	:	[in] setAmbient		- 環境光にセットする値
	//	第3引数	:	[in] setSpecular	- 鏡面光にセットする値
	//	第4引数	:	[in] setEmissive	- 放射光にセットする値
	//	第5引数	:	[in] setPower		- 鏡面光のハイライトにセットする値
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	Material( Color4F setDiffuse, Color4F setAmbient, Color4F setSpecular, Color4F setEmissive, float setPower );

	//--------------------------------------------------------------------
	// 
	//	処理	:	コンストラクタ(D3DMATERIAL9で初期化するタイプ)
	//	第1引数	:	[in] setMaterial	- 質感パラメータにセットする値
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	Material( D3DMATERIAL9 setMaterial );

	//--------------------------------------------------------------------
	// 
	//	処理	:	D3DMATERIAL9型で取得する
	//	戻り値	:	D3DMATERIAL9型
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	D3DMATERIAL9	GetMaterial() const;

	//--------------------------------------------------------------------
	// 
	//	処理	:	引数がD3DMATERIAL9なところにつっこむとD3DMATERIAL9として扱われる
	//	戻り値	:	D3DMATERIAL9型
	//	製作者	:	立川 翔野
	//	作成日	:	2011/06/23	- 作成
	// 
	//--------------------------------------------------------------------
	inline	operator D3DMATERIAL9() const;
};

// インラインメンバ関数の実装
// 引数がD3DMATERIAL9なところにつっこむとD3DMATERIAL9として扱われる
inline Material::operator D3DMATERIAL9() const
{
	return GetMaterial();
}

}	//	graphics	end
}	//	iruna		end

#endif	//	IRUNA_MATERIAL_H	end